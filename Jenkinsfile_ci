pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('docker_cred')
    }
options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {
        stage('Clone github repository') {
            steps {
                cleanWs()
                bat 'chcp 65001 && git clone -b main https://github.com/ghfranj/Big-Data-Infrastructure-2024-Lab4.git'
				}
			}
        stage('Checkout repo dir') {
            steps {
                bat 'chcp 65001 && cd Big-Data-Infrastructure-2024-Lab4 && dir'
				}
			}

        stage('Login'){
            steps{
                bat 'chcp 65001 && docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
                }
            }

        stage('Create and run docker container') {
            steps {
                script {
                    try {
                        bat 'chcp 65001 && cd Big-Data-Infrastructure-2024-Lab4 && docker-compose build'
                        }

                    finally {
                    bat '''
                        chcp 65001
                        cd Big-Data-Infrastructure-2024-Lab4
                        docker-compose up -d vault kafka
                        '''
                    def logs = bat(returnStdout: true, script: 'docker logs vault_c').trim()

                    while(!logs.contains("Development mode should NOT be used in production installations!"))
                    {
                        sleep time: 10, unit: 'SECONDS'
                        logs = bat(returnStdout: true, script: 'docker logs vault_c').trim()
                    }
                    bat '''
                        chcp 65001
                        cd Big-Data-Infrastructure-2024-Lab4
                        docker logs vault_c
                        docker exec  vault_c vault login myroot
                        docker exec  vault_c vault kv put secret/database DB_HOST="postgres" DB_NAME="lab4" DB_PASSWORD="ghfranjabour321" DB_PORT="5432" DB_USER="ghfranjabour"
                        docker exec  vault_c vault kv get secret/database
                        docker compose up -d postgres
                        '''
                    def logs2 = bat(returnStdout: true, script: 'docker logs postgres').trim()
                    while(!logs2.contains("COMMIT"))
                    {
                        sleep time: 10, unit: 'SECONDS'
                        logs2 = bat(returnStdout: true, script: 'docker logs postgres').trim()
                    }
                    bat '''
                        chcp 65001
                        cd Big-Data-Infrastructure-2024-Lab4
                        docker logs postgres
                        docker compose up app
                        '''
                        }
				    }
                }
            }
        stage('Push') {
            steps {
                bat 'chcp 65001 && docker tag ghfranjabour/lab4_big_data_infrastructure ghfranjabour/lab4_big_data_infrastructure:latest'
                bat 'chcp 65001 && docker push ghfranjabour/lab4_big_data_infrastructure:latest'
                bat 'chcp 65001 && docker tag ghfranjabour/postgres_vault ghfranjabour/postgres_vault:v4.0'
                bat 'chcp 65001 && docker push ghfranjabour/postgres_vault:v4.0'
            }
        }

	}

    post {
        always {
            bat 'chcp 65001 && docker logout'
        }
    }
}