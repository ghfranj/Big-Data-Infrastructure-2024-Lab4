version: '3.8'
networks:
  my_network:

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1"

  postgres:
    image: ghfranjabour/postgres_vault
    container_name: postgres
    build:
      dockerfile: Dockerfile.postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - my_network
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - VAULT_URL=http://vault:8200
      - VAULT_TOKEN=myroot
      - VAULT_PATH=secret/data/database
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  vault:
    image: hashicorp/vault:latest
    container_name: vault_c
    networks:
      - my_network
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
      VAULT_LOG_LEVEL: "info"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_STORAGE: "consul"
      VAULT_CONSUL_ADDRESS: "consul:8500"
      VAULT_CONSUL_TOKEN: "myroot"
    volumes:
      - ./vault-config:/vault/config

  app:
    image: ghfranjabour/lab4_big_data_infrastructure
    networks:
      - my_network
    container_name: lab4
    restart: always
    build:
      dockerfile: Dockerfile
    environment:
      VAULT_URL: ${VAULT_URL}
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_PATH: ${VAULT_PATH}
    volumes:
      - ./data:/app/data


volumes:
  postgres_db_data: